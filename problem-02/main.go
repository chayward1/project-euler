/*
   Even Fibonacci numbers

   Each new term in the Fibonacci sequence is generated by adding the previous two terms.
   By starting with 1 and 2, the first 10 terms will be:

   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

   By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import "fmt"

func fib(n int) int {
	if n == 0 || n == 1 {
		return n
	}
	return fib(n-1) + fib(n-2)
}

func isEven(n int) bool {
	return (n % 2) == 0
}

func main() {
	sum := 0
	for i := 1; i < 4000000; i++ {
		f := fib(i)
		if isEven(f) {
			sum += f
		}
	}
	fmt.Printf("sum: %d", sum)
}
